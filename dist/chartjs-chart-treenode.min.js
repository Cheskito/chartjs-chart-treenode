/*!
 * chartjs-chart-treenode v1.0.0
 * (c) 2025 Francesco Riva
 * Released under the MIT License
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).ChartTreeNode=t()}(this,function(){"use strict";const e={id:"treeGraph",afterDraw(e){if("scatter"!==e.config.type)return;const t=e.data.datasets[0],o=t.data;if(!o||!Array.isArray(o))return;const l=function(e){const t={};return e.forEach(e=>{t[e.from]||(t[e.from]={label:e.from,children:[],parents:[]}),t[e.to]||(t[e.to]={label:e.to,children:[],parents:[]}),t[e.from].children.push(t[e.to]),t[e.to].parents.push(t[e.from])}),t}(o),{maxDepth:a}=function(e){let o;Object.values(e).forEach(e=>{e.depth=null,e.y=null}),Object.values(e).filter(e=>0===e.parents.length).forEach(e=>e.depth=0);do{o=!1,Object.values(e).forEach(e=>{if(0===e.parents.length)return;const t=Math.max(-1,...e.parents.map(e=>e.depth??-1))+1;(null===e.depth||e.depth<t)&&(e.depth=t,o=!0)})}while(o);const l=t.column||{};Object.entries(e).forEach(([e,t])=>{void 0!==l[e]&&(t.depth=l[e])});const a=new Map;Object.values(e).forEach(e=>{a.has(e.depth)||a.set(e.depth,[]),a.get(e.depth).push(e)});const r=Math.max(...[...a.values()].map(e=>e.length)),n=t.priority||{};return a.forEach((e,t)=>{e.sort((e,t)=>(n[e.label]??Number.MAX_SAFE_INTEGER)-(n[t.label]??Number.MAX_SAFE_INTEGER)||e.label.localeCompare(t.label));const o=1/(r+1),l=(1-o*(e.length-1))/2;e.forEach((e,t)=>e.y=l+t*o)}),{maxDepth:Math.max(...Object.values(e).map(e=>e.depth)),maxY:1}}(l),r=Object.values(l),n=e.ctx,s=e.chartArea;if(r.forEach(e=>{const t=o.filter(t=>t.to===e.label),l=o.filter(t=>t.from===e.label);t.length>0?e.value=t.reduce((e,t)=>e+t.value,0):l.length>0?e.value=l[0].value:e.value=0}),!e._tooltipHandlerAttached){const t=e.canvas;e._hoveredNode=null,t.addEventListener("mousemove",o=>{const l=t.getBoundingClientRect(),a=o.clientX-l.left,n=o.clientY-l.top;e._hoveredNode=null;for(const t of r){const{x:o,y:l}=i(t.depth,t.y),r=a-o,s=n-l;if(Math.sqrt(r*r+s*s)<=10){e._hoveredNode=t;break}}e.draw()}),e._tooltipHandlerAttached=!0}function i(e,t){const o=s.right-s.left-100,l=s.bottom-s.top-80,n=Math.min(...r.map(e=>e.y)),i=(t-n)/(Math.max(...r.map(e=>e.y))-n||1);return{x:s.left+50+e/(a||1)*o,y:s.top+40+i*l}}r.forEach(e=>{e.children.forEach(t=>{const o=i(e.depth,e.y),l=i(t.depth,t.y);n.save(),n.strokeStyle="#888",n.lineWidth=2,n.beginPath();const a=.5*(l.x-o.x);n.moveTo(o.x,o.y),n.bezierCurveTo(o.x+a,o.y,l.x-a,l.y,l.x,l.y),n.stroke(),n.restore()})}),r.forEach(e=>{const{x:o,y:l}=i(e.depth,e.y);n.save();const a=(t.nodeColors||{})[e.label]||"black",r=t.nodeBorder||"0px",s=t.nodeBorderColor||"black";let c=0;"string"==typeof r&&r.endsWith("px")&&(c=parseInt(r.replace("px",""))),c>0&&(n.beginPath(),n.arc(o,l,10+c/2,0,2*Math.PI),n.fillStyle=s,n.fill()),n.beginPath(),n.arc(o,l,10,0,2*Math.PI),n.fillStyle=a,n.fill(),n.font="bold 14px sans-serif",n.fillStyle="#222",n.textAlign="center",n.textBaseline="top",n.fillText(e.label,o,l+14),n.restore()});const c=e._hoveredNode;if(c){const{x:e,y:t}=i(c.depth,c.y),o=`${c.label}: ${c.value}`,l=6;n.save(),n.font="bold 14px sans-serif";const a=n.measureText(o).width,r=20;n.fillStyle="rgba(0,0,0,0.7)",n.fillRect(e-a/2-l,t-30,a+2*l,r),n.fillStyle="#fff",n.textAlign="center",n.textBaseline="middle",n.fillText(o,e,t-20),n.restore()}}};return"undefined"!=typeof window&&window.Chart&&window.Chart.register(e),e});
